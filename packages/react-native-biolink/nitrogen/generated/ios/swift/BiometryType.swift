///
/// BiometryType.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

/**
 * Represents the JS union `BiometryType`, backed by a C++ enum.
 */
public typealias BiometryType = margelo.nitro.biolink.native.BiometryType

public extension BiometryType {
  /**
   * Get a BiometryType for the given String value, or
   * return `nil` if the given value was invalid/unknown.
   */
  init?(fromString string: String) {
    switch string {
      case "TouchID":
        self = .touchid
      case "FaceID":
        self = .faceid
      case "Biometrics":
        self = .biometrics
      case "None":
        self = .none
      default:
        return nil
    }
  }

  /**
   * Get the String value this BiometryType represents.
   */
  var stringValue: String {
    switch self {
      case .touchid:
        return "TouchID"
      case .faceid:
        return "FaceID"
      case .biometrics:
        return "Biometrics"
      case .none:
        return "None"
    }
  }
}
